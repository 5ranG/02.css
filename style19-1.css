*{
    box-sizing:border-box; 
}


.class1_1{
    overflow:hidden; 
    /*꼭 잇어야함,,float 초기화. 안쓰면 영역x 플롯 부모에 써줌*/
    padding: 20px;
    background-color: antiquewhite;
}

.class1_2{
    border: 1px solid red;
    width: 50px;
    text-align: center;
    margin: 3px;
}

#id1_1{
    float: left;
    width: 50px; height: 50px;
    background-image: url(image/pluz.png);
    background-position: center;
    background-repeat: no-repeat;
}

#id1_2{
    height: 50px;
    justify-content: flex-end;
    display: flex;
    align-items: center;
}

/*-------------------------*/

.class2_1{
    padding: 5px;
    border: 1px solid black;
}

#id2_1{
    padding-left: 20px;
    margin: 5px;
    border: 1px solid black;
}

#id2_2{
    display: flex;
    align-items: stretch; /*기본값. container의 교차축을 채우기 위해 items를 늘림*/
    flex-flow: nowrap;
}

#id2_2_1{
    margin: 5px;
    padding: 20px;
    flex-grow: 1;
    border: 1px solid black;
    flex-basis: 0; /*width 넣어도 됨. 값을 생략할 경우 0이 적용됨. 자식한테 적용시켜야함!!! */
}

#id2_2_2{
    margin: 5px;
    padding: 20px;
    flex-grow: 1;
    border: 1px solid black;
}

/*Q. flex-grow가 먹긴 먹는데... id2_2_1의 텍스트입숨 분량이 일정 이상 많아지자, 3:1의 비율이 무너집니다... 원인은 파악을 했는데.. 쟤가 flex-grow보다 더 강하게 먹는 걸까요...? 제가 쟬 비율 조절을 고정시키고 싶을때의 방안을 질문드립니다.*/

#id2_3{
    margin: 5px;
    padding: 10px;
    border: 1px solid black;
}






